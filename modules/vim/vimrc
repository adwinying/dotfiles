" General Vim settings
" # Vundle
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" git commands
Plugin 'tpope/vim-fugitive'
" git change indicator
Plugin 'airblade/vim-gitgutter'
" file tree pane
Plugin 'scrooloose/nerdtree'
" powerful commenter
Plugin 'scrooloose/nerdcommenter'
" syntax checker (checker install required)
Plugin 'w0rp/ale'
" replace surrounding quotes/parenthesis 
Plugin 'tpope/vim-surround'
" auto insert quotes/parenthesis
Plugin 'jiangmiao/auto-pairs'
" better terminal integration
Plugin 'wincent/terminus'
" statusbar
Plugin 'itchyny/lightline.vim'
" multiple cursor selection
Plugin 'terryma/vim-multiple-cursors'
" color previewer
Plugin 'gorodinskiy/vim-coloresque'
" indent lines
Plugin 'Yggdroot/indentLine'
" improved js indent and syntax highlighting
Plugin 'pangloss/vim-javascript'
" html5 omnicomplete and syntax
Plugin 'othree/html5.vim'
" emmet
Plugin 'mattn/emmet-vim'
" vue syntax highlighting
Plugin 'posva/vim-vue'
" php auto-import classes
Plugin 'arnaud-lb/vim-php-namespace'
" align blocks of text
Plugin 'godlygeek/tabular'
" fuzzy file finder
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

" autocompletion
if has('nvim')
  Plugin 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  " js autocompletion
  Plugin 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
  " php autocompletion
  Plugin 'lvht/phpcd.vim', { 'for': 'php', 'do': 'composer install' }
else
  Plugin 'Shougo/deoplete.nvim'
  Plugin 'roxma/nvim-yarp'
  Plugin 'roxma/vim-hug-neovim-rpc'
endif

" snippets
Plugin 'Shougo/neosnippet.vim'
Plugin 'Shougo/neosnippet-snippets'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" https://dougblack.io/words/a-good-vimrc.html
" # Color
	colorscheme molokai
	syntax enable

" # Spaces & Tabs (default to 2 spaces)
	set autoindent
	set tabstop=2
  set shiftwidth=2
	set softtabstop=2
	set expandtab

" # language specific indentation
augroup configgroup
  autocmd!
  autocmd Filetype php setlocal ts=4 sw=4 sts=4 expandtab
augroup END

" # UI Config
	set number
	set cursorline
	set relativenumber 
	set wildmenu
	set lazyredraw
	set showmatch
  set hlsearch
  set colorcolumn=80
  set signcolumn=yes
  set updatetime=100
	filetype indent on

" # Leader Shortcuts
	let mapleader=","
	inoremap jk <esc>

" # Backups
  set backup
  set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
  set backupskip=/tmp/*,/private/tmp/*
  set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
  set writebackup

" # Remap pane switching
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" # tab shortcuts
map <C-T> :tabnew<CR>
map <C-X> :tabclose<CR>

" # split vertically and switch to new pane
map <C-;> :vsp<CR><C-W><C-L>

" # edit/source vimrc
nnoremap <leader>ev :tabnew $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" # : key alternative
nnoremap ; :

" # save/load session
nnoremap <leader>s :mksession! ~/.vimsession.vim<CR>
nnoremap <leader>o :source ~/.vimsession.vim<CR>

" # save/close buffer
nnoremap <C-Q> :q<CR>
nnoremap <C-S> :w<CR>





" Emmet settings
" # expand with tab
imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")

" NERDTree settings
" # right arrow to open node
let NERDTreeMapActivateNode = '<right>'
" # display hidden files
let NERDTreeShowHidden = 1
" # toggle display of tree with <Leader> + n
nmap <leader>n :NERDTreeToggle<CR>
" # locate the focused file in tree with <Leader> + j
nmap <leader>j :NERDTreeFind<CR>
" # ignore these files in tree
let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']

" fzf settings
" # set fzf trigger key
noremap <leader>t :FZF<CR>
" # set the_silver_searcher trigger key
" requires the_silver_searcher to be installed:
" brew install the_silver_searcher
noremap <leader>f :Ag<CR>

" lightline settings
" # show statusline
set laststatus=2
" # hide default statusline
set noshowmode

" vim-multiple-cursors settings
" # remap select all instance
let g:multi_cursor_select_all_key = '<leader>d'

" IndentLine settings
" # toggle indent lines
nnoremap <C-I> :IndentLinesToggle<CR>

" vim-php-namespace settings
" auto-insert use class
function! IPhpInsertUse()
    call PhpInsertUse()
    call PhpSortUse()
    call feedkeys('a',  'n')
endfunction
autocmd FileType php inoremap <Leader>pu <Esc>:call IPhpInsertUse()<CR>
autocmd FileType php noremap <Leader>pu :call PhpInsertUse()<CR>
" sort imported classes
autocmd FileType php inoremap <Leader>ps <Esc>:call PhpSortUse()<CR>
autocmd FileType php noremap <Leader>ps :call PhpSortUse()<CR>

" tabular settings
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a: :Tabularize /:\zs<CR>
vmap <Leader>a: :Tabularize /:\zs<CR>
nmap <Leader>aa :Tabularize /=><CR>
vmap <Leader>aa :Tabularize /=><CR>

" deoplete settings
" # enable autocomplete on startup
" requires neovim python client to be installed:
" pip3 install neovim
let g:deoplete#enable_at_startup = 1

" deoplete-ternjs settings
" # enable ternjs in other file formats
" disabled as it crashes with vue files
"let g:deoplete#sources#ternjs#filetypes = ['vue']

" phpcd settings
" # deoplete integration
let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})
let g:deoplete#ignore_sources.php = ['omni']
" # set autoload default path
let g:phpcd_autoload_path = '.autoload.php'

" neosnippet settings
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
